#!/bin/bash
#
## Version 1.1.0
#
#
## Dependencies
#
# shell access
# teamspeak 3 server
# anacron / cron
# bash > 4.2
# bashutils
#
#
## Usage
# copy the user.config.sample file to $tmp_directory/.user.config
# replace mailaddr_to/_from and possibly the tslog path to fit your needs
# place inside /etc/cron.daily to run this script on a daily basis

# user specific config file
tmp_directory=/tmp/teamspeak/daily_mail
archive=/var/log/teamspeak
configfile=$tmp_directory/.user.config
configfile_secured=$tmp_directory/tmp.config
backupconf=/var/backups/teamspeak_log_daily_mail_user.config


#system specific variables
tslogs=/etc/teamspeak3-server_linux_amd64/logs
service_script=ts3server.service
tsuser=teamspeak

#log files
logfiles=$tmp_directory/teamspeak_daily_log_files.txt
daily_log=$tmp_directory/teamspeak_daily_log.txt

# comppositon variables
composition1=$tmp_directory/composition1.txt
composition2=$tmp_directory/composition2.txt
message_body=$tmp_directory/teamspeak_log_messagebody.txt
mailcomposition=$tmp_directory/teamspeak_mail_composition.txt


## todo
# code cleaning

## functions
clearcomp()
{
	# remove the composition files
	rm $composition1 $composition2 >/dev/null 2>&1
}

## preparations
#check if tmp directory is present if not create it
if [ ! -d "$tmp_directory" ]; then
	mkdir $tmp_directory
fi

#first run check
if [ ! -f "$configfile" ]; then
	if [ -f "$backupconf" ]; then
		echo -e "no config inside $tmp_directory using $backupconf"
		cp "$backupconf" "$configfile"
	else
		#config file is not present
		echo -e "no config file has been set. copy the sample config file to $configfile"
		exit
	fi
else
	# copy config file to /var/backup
	cp "$configfile" "$backupconf"
fi

# check if config file contains something we don't want
if	grep -E -q -v '^#|^[^ ]*=[^;]*' "$configfile"; then
	grep -E '^#|^[^ ]*=[^;&]*'  "$configfile" > "$configfile_secured"
	configfile="$configfile_secured"
fi

# source the config file
source  "$configfile"

#cleaning work environment
rm $tmp_directory/{teamspeak_log_messagebody,teamspeak_mail_composition,teamspeak_daily_log_files,teamspeak_daily_log}.txt >/dev/null 2>&1

# picking the logfiles from the running teamspeak server for the selection
ls -t $tslogs | head -n2 | sort >> $logfiles
grep "$(date -d "yesterday" '+%Y-%m-%d')" "$tslogs/$(sed -n '1p' $logfiles)" >> $daily_log
grep "$(date -d "yesterday" '+%Y-%m-%d')" "$tslogs/$(sed -n '2p' $logfiles)" >> $daily_log

##preparing report
#report header with systemd script
{	echo -e "LogReport Teamspeak $(date -d "yesterday" '+%d.%m.%Y')\n"
	echo -e "---------------------- Teamspeak -------------------------\n"
	#server
	echo -e "-------------------- Server -----------------------\n"
	echo -e "Status : $(systemctl status $service_script)\n"
} >> $message_body

grep -E "ServerMain|stopped" $daily_log | sort >> $composition1

#paste file only if not empty
if [ -s $composition1 ]; then
	cat $composition1 >> $message_body

fi
clearcomp

##error
grep "ERROR" $daily_log >> $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "--------------------- Error -----------------------\n"
		cat $composition1
		echo -e "------------------- Error End ---------------------\n"
	} >> $message_body

fi
clearcomp

##warning
grep "WARNING" $daily_log >> $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "-------------------- Warning ----------------------\n"
	 	cat $composition1
	 	echo -e "------------------ Warning End --------------------\n"
	} >> $message_body
fi
clearcomp

##accounting
grep "Accounting" $daily_log >> $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "------------------- Accounting --------------------\n"
	 	cat $composition1
	 	echo -e "----------------- Accounting End ------------------\n"
	} >> $message_body
fi
clearcomp
echo -e "------------------ Server End ---------------------\n" >> $message_body

##complaint
grep "^complaint" $daily_log >> $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "------------------ Complaint ----------------------\n"
		cat $composition1
		echo -e "---------------- Complaint End --------------------\n"
	} >> $message_body
fi
clearcomp

##ban
#grep and sort logentries
grep -E "ban added|BanManager" $daily_log | sort >> $composition1

#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "---------------------- Ban ------------------------\n"
	 	cat $composition1
	 	echo -e "-------------------- Ban End ----------------------\n"
	} >> $message_body

fi
clearcomp

##kick
grep "reason 'invokerid" $daily_log >> $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "-------------------- Kick ------------------------\n"
		cat $composition1
		echo -e "------------------ Kick End ----------------------\n"
	} >> $message_body

fi
clearcomp

##permission changed
grep "permission" $daily_log >> $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "------------------- Permission --------------------\n"
	 	cat $composition1
	 	echo -e "----------------- Permission End ------------------\n"
	} >> $message_body

fi
clearcomp

##group changed
grep -E "was deleted by|was copied by|was added to|was added by|was removed from" $daily_log | grep -v "permission '" >>  $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	echo -e "------------------ Group change -------------------" >> $message_body

	#someone added to a group
	grep 'was added to' $composition1 > $composition2
	if [ -s $composition2 ]; then
		{	echo -e "--- added to ---\n"
		 	grep 'was added to' $composition1
		} >> $message_body
	fi

	#somebody removed from a group
	grep 'was removed from' $composition1 > $composition2
	if [ -s $composition2 ]; then
		{	echo -e "--- removed from ---\n"
			grep 'was removed from' $composition1
		} >> $message_body
	fi

	#created or copied a group
	grep -E "was copied by|was added by" $composition1 > $composition2
	if [ -s $composition2 ]; then
		{
			echo -e "--- created/ copied ---\n"
			grep -E "was copied by|was added by" $composition1
		} >> $message_body
	fi

	#deleted a group
	grep "was deleted by" $composition1 > $composition2
	if [ -s $composition2 ]; then
		{
			echo -e "--- deleted ---\n"
			grep "was deleted by" $composition1
		} >> $message_body
	fi
	echo -e "---------------- Group change End -----------------\n" >> $message_body
fi
clearcomp

##channel created
grep "channel" $daily_log | grep "VirtualServerBase">> $composition1
#paste file only when log file has data in it
if [ -s $composition1 ]; then
	{	echo -e "--------------------- Channel ---------------------\n"
	 	cat $composition1
	 	echo -e "------------------- Channel End -------------------\n"
	} >> $message_body
fi
echo -e "-------------------- Teamspeak End -----------------------" >> $message_body
clearcomp

## archive daily reports
#check if archive directory is present
if [ ! -d "$tmp_directory" ]; then
	mkdir $tmp_directory
fi

cat $message_body >> $archive/teamspeak_report.log

#mail daily reports
if [ "$email" = yes ]; then
	#file is not empty
	{	echo -e "To: $mailaddr_to"
	 	echo -e "From: $mailaddr_from"
	 	echo -e "Subject: LogReport Teamspeak $(date -d "yesterday" '+%d.%m.%Y')\n"
	 	cat $message_body
	} >> $mailcomposition
	su $tsuser -s /bin/sh -c "cat $mailcomposition | /usr/sbin/sendmail -t"
fi

#removing tmp
rm $tmp_directory/{teamspeak_log_messagebody,teamspeak_mail_composition,teamspeak_daily_log_files,teamspeak_daily_log}.txt >/dev/null 2>&1
